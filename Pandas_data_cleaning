{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1b5cb82a-de5a-46b2-83e5-a429fa16d0f7",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "583e1e78-691e-4bcd-8266-7aeb73c4f6ef",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Laad de source dataset in een Pandas dataframe en zorg ervoor dat je op een zo efficient mogelijke manier enkel de voor deze dimensie relevant kolommen inleest\n",
    "\n",
    "\n",
    "columns_to_use= ['host_id',\n",
    "'host_name',\n",
    "'host_since',\n",
    "'host_location',\n",
    "'host_response_time',\n",
    "'host_acceptance_rate',\n",
    "'host_is_superhost',\n",
    "'host_listings_count']\n",
    "\n",
    "df=pd.read_csv(r\"C:\\Users\\mvdp1\\OneDrive\\Documenten\\GitHub\\Pandas-Oefeningen-Data\\AirBNB Antwerpen - Listings.csv\", usecols=columns_to_use)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d4cb853-d14a-4135-b104-6374960b32cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Eerst en vooral gaan we kijken naar de dataframe wat er allemaal opgeschoont dient te worden\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3b39c753-ec57-4095-af53-0a81bebd0086",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Verwijder dubbele records je baserend op het host_id\n",
    "\n",
    "\n",
    "df = df.drop_duplicates(subset=['host_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "655aa536-a6e4-44ae-8004-a9973cd6647a",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Splits de host_location kolom in een host_gemeente en een host_land kolom\n",
    "\n",
    "\n",
    "split_location = df['host_location'].str.split(', ', expand=True)\n",
    "\n",
    "df['host_gemeente'] = split_location[0]\n",
    "df['host_land'] = split_location[1]\n",
    "\n",
    "#Sommige host_location waarden hadden enkel een land als waarde, zorg ervoor dat deze landwaarde in de host_land kolom beland\n",
    "\n",
    "df['host_land'] = df['host_land'].fillna(df['host_gemeente'])\n",
    "df['host_gemeente'] = df['host_gemeente'].mask(df['host_gemeente'] == df['host_land'])\n",
    "\n",
    "#Verwijder kolom host_location kolom, die hebben we niet meer nodig\n",
    "\n",
    "df.drop(columns='host_location', inplace=True)\n",
    "\n",
    "#Converteren van Amerikaanse staten initialen naar land USA\n",
    "\n",
    "df.loc[df['host_land'].str.len() < 3, 'host_land']= 'USA'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9c0b12ef-9864-4b10-b946-099a9df83880",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Aanpassen van kolom volgorde\n",
    "\n",
    "\n",
    "df= df[['host_id','host_name','host_since','host_gemeente','host_land', 'host_response_time','host_acceptance_rate', 'host_is_superhost', 'host_listings_count']]\t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "90d31720-9cf0-4457-a542-db0ce90e4f7b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Converteer de kolommen naar het gepaste datatype \n",
    "\n",
    "df['host_since']= pd.to_datetime(df['host_since'])\n",
    "df['host_acceptance_rate']=df['host_acceptance_rate'].str.replace('%',' ')\n",
    "df['host_response_time']= df['host_response_time'].astype('category')\n",
    "df['host_acceptance_rate']=df['host_acceptance_rate'].astype(float)\n",
    "df['host_acceptance_rate']=df['host_acceptance_rate'].apply(lambda x: x/100)\n",
    "df['host_is_superhost']=  df['host_is_superhost'].astype(bool)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ec8154ed-35de-4b83-aeb4-2c97d19f98a8",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Pas kolom namen aan\n",
    "\n",
    "df.rename(columns={'host_name': 'naam',\n",
    "                   'host_since': 'host_sinds', \n",
    "                   'host_gemeente': 'woonplaats', \n",
    "                   'host_land': 'land',\n",
    "                   'host_response_time':'reactietijd', \n",
    "                   'host_acceptance_rate': 'acceptatiegraad', \n",
    "                   'host_is_superhost': 'is_superhost', \n",
    "                   'host_listings_count': 'aantal_accomodaties' }, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0415e9a7-4aa2-4dde-8906-e685acbdc83d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Zorg dat de string datavelden steeds in proper case staan\n",
    "\n",
    "\n",
    "string_columns = df.select_dtypes(include='object').columns\n",
    "df[string_columns] = df[string_columns].apply(lambda x: x.str.strip())\n",
    "df[string_columns] = df[string_columns].apply(lambda x: x.str.capitalize())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5abedb79-161a-4351-a9dc-6e3609dc7790",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Verwijder niet relevante karakters, e.g. quotes en dubbele quotes uit de string datavelden\n",
    "\n",
    "\n",
    "df[string_columns] = df[string_columns].apply(lambda x: x.str.replace('[\\'\"\\;]', '', regex=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a04e4c70-d2f6-42a6-841d-b95b843dbe3a",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Zorg dat de woonplaats waarden consistent zijn (in dit geval is Antwerpen in 2 talen geschreven wat data-analyse moeilijk maakt)\n",
    "\n",
    "\n",
    "df['woonplaats']=df['woonplaats'].replace('Antwerp', 'Antwerpen')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "cacadc1a-b1f0-4c71-971f-c29e289e330b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Voeg een extra ‘verblijft_in_het_buitenland’ boolean kolom toe\n",
    "\n",
    "\n",
    "df['verblijft_in_het_buitenland'] = np.where(df['land'] != 'Belgium', True, False)\n",
    "\n",
    "#Als de land kolom een NaN waarde bevat wordt de nieuwe kolom 'verblijft_in_het_buitenland' automatisch naar NaN omgezet\n",
    "\n",
    "\n",
    "df.loc[df['land'].isna(), 'verblijft_in_het_buitenland'] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a289d9e0-9435-4aa6-97cc-3078e777cb11",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Zorg ervoor dat de host_id kolom als dataframe index wordt gebruikt\n",
    "\n",
    "df.set_index('host_id', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e1635790-879a-403c-9472-4f71e5898fc9",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>naam</th>\n",
       "      <th>host_sinds</th>\n",
       "      <th>woonplaats</th>\n",
       "      <th>land</th>\n",
       "      <th>reactietijd</th>\n",
       "      <th>acceptatiegraad</th>\n",
       "      <th>is_superhost</th>\n",
       "      <th>aantal_accomodaties</th>\n",
       "      <th>verblijft_in_het_buitenland</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>host_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>234077</th>\n",
       "      <td>Karin</td>\n",
       "      <td>2010-09-14</td>\n",
       "      <td>Antwerpen</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>0.96</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>586942</th>\n",
       "      <td>Gina</td>\n",
       "      <td>2011-05-14</td>\n",
       "      <td>Antwerpen</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>0.97</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1167377</th>\n",
       "      <td>Geert</td>\n",
       "      <td>2011-09-16</td>\n",
       "      <td>Antwerpen</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.42</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263933</th>\n",
       "      <td>Kristien</td>\n",
       "      <td>2011-10-08</td>\n",
       "      <td>Antwerpen</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>1.00</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1754396</th>\n",
       "      <td>Marleen</td>\n",
       "      <td>2012-02-15</td>\n",
       "      <td>Antwerpen</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>0.87</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18992409</th>\n",
       "      <td>Veronique</td>\n",
       "      <td>2014-07-27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>1.00</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>382680622</th>\n",
       "      <td>Raf</td>\n",
       "      <td>2021-01-02</td>\n",
       "      <td>Brasschaat</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36131763</th>\n",
       "      <td>Lore</td>\n",
       "      <td>2015-06-18</td>\n",
       "      <td>Antwerpen</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>1.00</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377352308</th>\n",
       "      <td>Magali</td>\n",
       "      <td>2020-11-28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>0.50</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29314978</th>\n",
       "      <td>Martine</td>\n",
       "      <td>2015-03-14</td>\n",
       "      <td>Harelbeke</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>within an hour</td>\n",
       "      <td>1.00</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1361 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                naam host_sinds  woonplaats     land     reactietijd  \\\n",
       "host_id                                                                \n",
       "234077         Karin 2010-09-14   Antwerpen  Belgium  within an hour   \n",
       "586942          Gina 2011-05-14   Antwerpen  Belgium  within an hour   \n",
       "1167377        Geert 2011-09-16   Antwerpen  Belgium             NaN   \n",
       "1263933     Kristien 2011-10-08   Antwerpen  Belgium  within an hour   \n",
       "1754396      Marleen 2012-02-15   Antwerpen  Belgium  within an hour   \n",
       "...              ...        ...         ...      ...             ...   \n",
       "18992409   Veronique 2014-07-27         NaN      NaN  within an hour   \n",
       "382680622        Raf 2021-01-02  Brasschaat  Belgium             NaN   \n",
       "36131763        Lore 2015-06-18   Antwerpen  Belgium  within an hour   \n",
       "377352308     Magali 2020-11-28         NaN      NaN  within an hour   \n",
       "29314978     Martine 2015-03-14   Harelbeke  Belgium  within an hour   \n",
       "\n",
       "           acceptatiegraad  is_superhost  aantal_accomodaties  \\\n",
       "host_id                                                         \n",
       "234077                0.96          True                    4   \n",
       "586942                0.97          True                    1   \n",
       "1167377               0.42          True                    1   \n",
       "1263933               1.00          True                    1   \n",
       "1754396               0.87          True                    1   \n",
       "...                    ...           ...                  ...   \n",
       "18992409              1.00          True                    1   \n",
       "382680622              NaN          True                    1   \n",
       "36131763              1.00          True                    1   \n",
       "377352308             0.50          True                    1   \n",
       "29314978              1.00          True                    2   \n",
       "\n",
       "          verblijft_in_het_buitenland  \n",
       "host_id                                \n",
       "234077                          False  \n",
       "586942                          False  \n",
       "1167377                         False  \n",
       "1263933                         False  \n",
       "1754396                         False  \n",
       "...                               ...  \n",
       "18992409                          NaN  \n",
       "382680622                       False  \n",
       "36131763                        False  \n",
       "377352308                         NaN  \n",
       "29314978                        False  \n",
       "\n",
       "[1361 rows x 9 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Nu even kijken naar het resultaat\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "581a772f-8770-4f18-a658-6dab34c10aca",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Exporteer de opgeschoonde data naar een csv file\n",
    "\n",
    "df.to_csv('AirBNB_data_cleaned.csv',index=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
